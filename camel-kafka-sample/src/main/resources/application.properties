## General properties
logging.config=classpath:logback.xml

# the options from org.apache.camel.spring.boot.CamelConfigurationProperties can be configured here
camel.springboot.name=CamelKafkaSpring

# lets listen on all ports to ensure we can be invoked from the pod IP
server.address=0.0.0.0
management.server.address=0.0.0.0

# lets use a different management port in case you need to listen to HTTP requests on 8080
server.port=8080
management.server.port=8081

# disable all management endpoints except health
endpoints.enabled = false
endpoints.health.enabled = true

management.security.enabled=false
management.endpoints.web.exposure.include=hawtio,jolokia
hawtio.authenticationEnabled=false
endpoints.jolokia.sensitive = false
spring.jmx.enabled=true

## Kakfa properties
kafka.bootstrap-servers=${KAFKA_BOOTSTRAP:amq-streams-sample-kafka-bootstrap-infra-amqstreams.apps.ocp4.example.com:443}
kafka.security.protocol=SASL_SSL

# Consumer properties
kafka.consumer.properties.sasl.mechanism=SCRAM-SHA-512
kafka.consumer.ssl.trust-store-location=${KAFKA_TRUSTSTORE_LOCATION:/home/fguimara/Fernando/projects/repos/middleware/samples-camel/camel-kafka-sample/truststore.jks}
kafka.consumer.ssl.trust-store-password=${KAFKA_TRUSTSTORE_PASSWORD:password}
kafka.consumer.ssl.trust-store-type=PKCS12
kafka.consumer.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="${KAFKA_USER:admin}" password="${KAFKA_USER_PASSWORD:Sx52xxUiOIEQPuHA2KGLRSEkDihdoD4I}";
kafka.consumer.group-id=springboot
kafka.consumer.count=1
kafka.consumer.auto-offset-reset=earliest
topic.name.consumer=dbserver1.inventory.customers

## File Properties
file.diretory=${FILE_DIRECTORY:/home/fguimara/Fernando/projects/repos/bmb/samples-camel/camel-kafka-sample/dir}

## FTP Properties
ftp.server=${FTP_SERVER:localhost}
ftp.port=${FTP_SERVER_PORT:2222}
ftp.user=${FTP_USER:foo}
ftp.password=${FTP_PASSWORD:pass}
ftp.directory=${FTP_DIRECTORY:upload}